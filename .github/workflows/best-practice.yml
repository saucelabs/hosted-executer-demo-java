# This workflow will build a Java project with Maven
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

name: Best Practices Tests

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  # Build the project as a Docker image and push it to Docker Hub
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.meta.outputs.tags }}
      label: ${{ steps.meta.outputs.labels }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ vars.DOCKER_USERNAME }}/java-hosted-execution
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  
  # Run the tests from the previously created Docker image in the Sauce cloud
  run-desktop-tests:
    needs: push_to_registry
    name: Run Tests on Sauce Hosted Execution
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run tests
      env:
        SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
        SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
        DOCKER_TAG: ${{ needs.push_to_registry.outputs.tag }}
        ENTRYPOINT: mvn test -pl best-practice -Dtest=DesktopTests
      # TODO: Replace the npm installation with the saucectl docker container hwen ready
      run: |
        npm install -g saucectl
        saucectl run

    # TODO: Add more tests in parallel once saucectl has command lines
